import java.util.*;

public class WordBreaker {
    public boolean wordBreak(String s, String[] dictionary) {
        Set<String> dict = new HashSet<>(Arrays.asList(dictionary));
        int n = s.length();
        boolean[] dp = new boolean[n + 1];
        dp[0] = true;

        int maxWordLen = 0;
        for (String word : dictionary) {
            maxWordLen = Math.max(maxWordLen, word.length());
        }

        for (int i = 1; i <= n; i++) {
            // Only check back up to maxWordLen positions to optimize
            for (int j = Math.max(0, i - maxWordLen); j < i; j++) {
                if (dp[j] && dict.contains(s.substring(j, i))) {
                    dp[i] = true;
                    break;
                }
            }
        }

        return dp[n];
    }

    
}
