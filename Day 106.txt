import java.util.*;

public class Solution {
    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<>();
        
        for (String token : tokens) {
            if (isOperator(token)) {
                int operand2 = stack.pop(); // Second operand
                int operand1 = stack.pop(); // First operand
                
                int result = applyOperator(operand1, operand2, token);
                stack.push(result);
            } else {
                stack.push(Integer.parseInt(token)); // Push numbers
            }
        }
        
        return stack.pop(); // Final result
    }
    
    private boolean isOperator(String token) {
        return token.equals("+") || token.equals("-") || token.equals("*") || token.equals("/");
    }

    private int applyOperator(int a, int b, String op) {
        switch (op) {
            case "+": return a + b;
            case "-": return a - b;
            case "*": return a * b;
            case "/": return a / b; // Division rounds towards zero
            default: throw new IllegalArgumentException("Invalid operator: " + op);
        }
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        
        String[] arr1 = {"2", "3", "1", "*", "+", "9", "-"};
        System.out.println(solution.evalRPN(arr1)); // Output: -4

        String[] arr2 = {"100", "200", "+", "2", "/", "5", "*", "7", "+"};
        System.out.println(solution.evalRPN(arr2)); // Output: 757
    }
}
